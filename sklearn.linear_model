import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression

# Load historical price data
df = pd.read_csv('price_data.csv', index_col='Date', parse_dates=['Date'])

# Calculate Volume Point of Control (VPoC)
def calculate_vpoc(df):
    vpoc = df.groupby(df.index.date)['Volume'].sum().idxmax()
    return vpoc

vpoc = calculate_vpoc(df)

# Create a feature matrix for the prediction model
X = df.drop(['Close'], axis=1)
y = df['Close']

# Split data into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse:.2f}')

# Use the model to make predictions on new data
new_data = pd.DataFrame({'Open': [100], 'High': [105], 'Low': [95], 'Volume': [1000]})
new_prediction = model.predict(new_data)
print(f'Predicted Close: {new_prediction[0]:.2f}')
